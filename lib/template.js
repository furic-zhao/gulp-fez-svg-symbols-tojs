"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (options) {
  return "(function(window) {\n  var svgSprite = '" + options.svg + "';\n  var script = function() {\n    var scripts = document.getElementsByTagName(\"script\");\n    return scripts[scripts.length - 1]\n  }();\n  var shouldInjectCss = script.getAttribute(\"data-injectcss\");\n  var ready = function(fn) {\n    if (document.addEventListener) {\n      if (~[\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState)) {\n        setTimeout(fn, 0)\n      } else {\n        var loadFn = function() {\n          document.removeEventListener(\"DOMContentLoaded\", loadFn, false);\n          fn()\n        };\n        document.addEventListener(\"DOMContentLoaded\", loadFn, false)\n      }\n    } else if (document.attachEvent) {\n      IEContentLoaded(window, fn)\n    }\n\n    function IEContentLoaded(w, fn) {\n      var d = w.document,\n        done = false,\n        init = function() {\n          if (!done) {\n            done = true;\n            fn()\n          }\n        };\n      var polling = function() { try { d.documentElement.doScroll(\"left\") } catch (e) { setTimeout(polling, 50); return } init() };\n      polling();\n      d.onreadystatechange = function() {\n        if (d.readyState == \"complete\") {\n          d.onreadystatechange = null;\n          init()\n        }\n      }\n    }\n  };\n  var before = function(el, target) {\n    target.parentNode.insertBefore(el, target)\n  };\n  var prepend = function(el, target) {\n    if (target.firstChild) {\n      before(el, target.firstChild)\n    } else {\n      target.appendChild(el)\n    }\n  };\n\n  function appendSvg() {\n    var div, svg;\n    div = document.createElement(\"div\");\n    div.innerHTML = svgSprite;\n    svgSprite = null;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n      svg.setAttribute(\"aria-hidden\", \"true\");\n      svg.style.position = \"absolute\";\n      svg.style.width = 0;\n      svg.style.height = 0;\n      svg.style.overflow = \"hidden\";\n      prepend(svg, document.body)\n    }\n  }\n  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {\n    window.__iconfont__svg__cssinject__ = true;\n    try {\n      document.write(\"<style>." + options.className + " {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>\")\n    } catch (e) {\n      console && console.log(e)\n    }\n  }\n  ready(appendSvg)\n})(window);\n";
};